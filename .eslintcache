[{"/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/index.js":"1","/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/reportWebVitals.js":"2","/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/components/header/index.js":"3","/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/components/footer/index.js":"4","/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/views/feed/index.js":"5","/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/views/not-found/index.js":"6","/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/components/post-list/index.js":"7","/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/components/post/index.js":"8","/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/services/imageService.js":"9","/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/services/helper.js":"10","/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/components/feed-aside/index.js":"11","/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/components/filter/index.js":"12","/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/components/toggle/index.js":"13","/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/components/sort/index.js":"14","/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/api/posts.js":"15","/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/config/env.js":"16","/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/views/post/index.js":"17","/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/api/location.js":"18","/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/views/authenticate/index.js":"19","/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/components/sign-in/index.js":"20","/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/components/sign-up/index.js":"21","/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/api/user.js":"22","/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/wrapper.js":"23"},{"size":491,"mtime":1607733708021,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1607282530317,"results":"26","hashOfConfig":"25"},{"size":1269,"mtime":1607736457130,"results":"27","hashOfConfig":"25"},{"size":1459,"mtime":1607293977680,"results":"28","hashOfConfig":"25"},{"size":3187,"mtime":1607649282960,"results":"29","hashOfConfig":"25"},{"size":116,"mtime":1607293848454,"results":"30","hashOfConfig":"25"},{"size":315,"mtime":1607394601680,"results":"31","hashOfConfig":"25"},{"size":1290,"mtime":1607655989822,"results":"32","hashOfConfig":"25"},{"size":194,"mtime":1607653232372,"results":"33","hashOfConfig":"25"},{"size":780,"mtime":1607397201724,"results":"34","hashOfConfig":"25"},{"size":2196,"mtime":1607726772392,"results":"35","hashOfConfig":"25"},{"size":2586,"mtime":1607647825781,"results":"36","hashOfConfig":"25"},{"size":813,"mtime":1607565956159,"results":"37","hashOfConfig":"25"},{"size":2090,"mtime":1607567487059,"results":"38","hashOfConfig":"25"},{"size":1052,"mtime":1607737107538,"results":"39","hashOfConfig":"25"},{"size":207,"mtime":1607574467227,"results":"40","hashOfConfig":"25"},{"size":7413,"mtime":1607726681021,"results":"41","hashOfConfig":"25"},{"size":372,"mtime":1607662473511,"results":"42","hashOfConfig":"25"},{"size":981,"mtime":1607736006898,"results":"43","hashOfConfig":"25"},{"size":1989,"mtime":1607737497477,"results":"44","hashOfConfig":"25"},{"size":1903,"mtime":1607804368981,"results":"45","hashOfConfig":"25"},{"size":908,"mtime":1607804478932,"results":"46","hashOfConfig":"25"},{"size":1797,"mtime":1607802753077,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1syjbc7",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/index.js",[],["98","99"],"/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/reportWebVitals.js",[],"/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/components/header/index.js",[],"/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/components/footer/index.js",[],"/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/views/feed/index.js",["100"],"import React, { useEffect, useState } from \"react\";\nimport \"./feed.css\";\nimport { getPosts } from \"../../api/posts\";\nimport PostList from \"../../components/post-list\";\nimport Loader from \"react-loader-spinner\";\nimport Filter from \"../../components/filter\";\nimport Sort from \"../../components/sort\";\nimport ReactPaginate from \"react-paginate\";\n\nconst Feed = (props) => {\n  const [posts, setPosts] = useState([]);\n  const [amountOfPosts, setAmountOfPosts] = useState(0);\n  // const [searchThreads, setSearchThreads] = useState([]);\n\n  const [dataAvailable, setDataAvailable] = useState(false);\n  // const [searchDone, setSearchDone] = useState(false);\n  // const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(0);\n\n  const [filter, setFilter] = useState({});\n  const [sorting, setSorting] = useState({});\n\n  const requestPosts = () => {\n    setDataAvailable(false);\n    console.log('request posts');\n    getPosts(filter, sorting, currentPage)\n      .then((response) => {\n        console.log('response posts', response);\n\n        // get amount of posts\n        if (response.data.total) {\n          setAmountOfPosts(response.data.total);\n        } else {\n          setAmountOfPosts(0);\n        }\n\n        // Insert posts\n        if (response.data.posts) {\n          setPosts(response.data.posts);\n        } else {\n          setPosts([]);\n        }\n\n        // Let UI know that the users are available\n        setDataAvailable(true);\n      })\n      .catch((err) => {\n        // TODO: Show error message\n        console.error(\"Failed to get all threads\", err);\n      });\n  }\n\n  const updateFilter = (filter) => {\n    console.log('updateFilter in feed', filter);\n    setFilter(filter);\n  }\n\n  const updateSorting = (sorting) => {\n    console.log('updateSorting in feed', sorting);\n    setSorting(sorting);\n  }\n\n  function handlePageClick({ selected: selectedPage }) {\n    console.log('page update', selectedPage);\n    setCurrentPage(selectedPage);\n  }\n\n  useEffect(requestPosts, [filter, sorting, currentPage])\n\n  useEffect(() => {\n    setCurrentPage(0);\n  }, [filter, sorting])\n\n  const initialLoad = () => {\n    requestPosts();\n  }\n  useEffect(initialLoad, []);\n\n  return (\n    <div className=\"feed\">\n      <Filter updateFilter={updateFilter} />\n      <div className='feed-smaller'>\n        <Sort updateSorting={updateSorting} />\n        {\n          dataAvailable ?\n            <PostList posts={posts} />\n            :\n            <Loader\n              type=\"Puff\"\n              color=\"#005edc\"\n              height={100}\n              width={100}\n              className=\"loader\"\n            />\n        }\n      </div>\n      <ReactPaginate\n        previousLabel={\"← Previous\"}\n        nextLabel={\"Next →\"}\n        pageCount={Math.ceil(amountOfPosts / (sorting && sorting.amount ? sorting.amount : 10))}\n        onPageChange={handlePageClick}\n        containerClassName={\"pagination\"}\n        previousLinkClassName={\"pagination__link\"}\n        nextLinkClassName={\"pagination__link\"}\n        disabledClassName={\"pagination__link--disabled\"}\n        activeClassName={\"pagination__link--active\"}\n      />\n    </div>\n  );\n};\n\nexport default Feed;\n","/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/views/not-found/index.js",[],"/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/components/post-list/index.js",[],"/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/components/post/index.js",[],"/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/services/imageService.js",[],"/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/services/helper.js",[],"/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/components/feed-aside/index.js",[],"/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/components/filter/index.js",[],"/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/components/toggle/index.js",[],"/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/components/sort/index.js",[],"/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/api/posts.js",[],"/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/config/env.js",[],"/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/views/post/index.js",["101","102","103","104","105","106","107","108"],"import React, { useState, useEffect } from \"react\";\nimport \"./post.css\";\nimport \"swiper/swiper-bundle.min.css\"\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport { getPost } from \"../../api/posts\";\nimport { getLocations } from \"../../api/location\";\nimport Loader from \"react-loader-spinner\";\nimport ReactHtmlParser from 'react-html-parser';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport SwiperCore, { Navigation, A11y, Pagination } from 'swiper';\nimport {\n  convertDate\n} from \"../../services/helper\";\nimport {\n  getImageUrl,\n  imageSize\n} from \"../../services/imageService\";\nimport { GoogleMap, LoadScript, Marker, Rectangle, Circle } from '@react-google-maps/api';\n\nSwiperCore.use([Navigation, A11y, Pagination]);\n\nconst PostPage = (props) => {\n  // declare states\n  const [id, setId] = useState(undefined);\n  const [redirectToHome, setRedirectToHome] = useState(false);\n  const [postLoaded, setPostLoaded] = useState(false);\n  const [post, setPost] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [visiblePosts, setVisiblePosts] = useState([]);\n  const [map, setMap] = React.useState(null)\n\n  const [coordinates, setCoordinates] = useState([]);\n  const [center, setCenter] = useState(null);\n\n\n  // Get Post here\n  const initialSetup = () => {\n    // Get post\n    if (\n      props.location &&\n      props.location.state &&\n      props.location.state.post\n    ) {\n      console.log('post already loaded', props.location.state.post);\n      setPost(props.location.state.post);\n      setPostLoaded(true);\n    }\n\n    // Get post id\n    if (\n      props.location &&\n      props.location.state &&\n      props.location.state.postId\n    ) {\n      setId(props.location.state.postId);\n    } else if (props.match && props.match.params && props.match.params.postId) {\n      setId(props.match.params.postId);\n    } else {\n      setRedirectToHome(true);\n    }\n  };\n\n  const getCurrentPost = () => {\n    if (!post && id) {\n      console.log('loading post', id);\n      getPost(id)\n        .then((response) => {\n          if (response.status === 200) {\n            if (\n              response.data\n            ) {\n              setPost(response.data);\n              setPostLoaded(true);\n            }\n          } else if (response.status === 202) {\n            console.error(\"error\", response.data);\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        })\n    }\n  };\n\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null)\n  }, [])\n\n  useEffect(initialSetup, [props.location, props.match]);\n  useEffect(getCurrentPost, [id, post]);\n\n  const onLoadRec = rectangle => {\n    console.log('rectangle: ', rectangle)\n  }\n\n  useEffect(() => {\n    if (post) {\n      let requestParam = post.address;\n      if (requestParam === \"\") {\n        requestParam = post.neighborhood.join(\" \");\n      }\n      getLocations(requestParam)\n        .then((response) => {\n          console.log('get map data', response.data)\n          if (response.data.results && response.data.results.length && response.data.results.length > 0) {\n            setCoordinates(response.data.results[0])\n            if (response.data.results[0] && response.data.results[0].geometry && response.data.results[0].geometry.location) {\n              setCenter(response.data.results[0].geometry.location);\n            }\n          }\n        }).catch((err) => {\n          console.log('Failed to get map data', err)\n        })\n    }\n  }, [post]);\n\n  if (redirectToHome === true) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const getBody = () => {\n    return post.body.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>');\n  }\n\n  return (\n    <div className=\"post\">\n      {\n        // Show loader until we load the user list\n        postLoaded ? (\n          // posts here\n          <React.Fragment>\n            <h1>{post.title}</h1>\n            <div className='content'>\n              <div className='left'>\n                <div className='gallery'>\n                  <Swiper\n                    navigation\n                    spaceBetween={0}\n                    slidesPerView={1}\n                    onSlideChange={() => console.log('slide change')}\n                    onSwiper={(swiper) => swiper.update()}\n                  >\n                    {\n                      post.images.map((image, index) => {\n                        return <SwiperSlide style={{ backgroundImage: `url(${getImageUrl(image, imageSize.LARGE)})` }}> </SwiperSlide>\n                      })\n                    }\n                  </Swiper>\n                </div>\n                <div className=\"body\">{ReactHtmlParser(getBody())}</div>\n              </div>\n              <div className='right'>\n                <div className=\"map\">\n                  <LoadScript\n                    googleMapsApiKey=\"AIzaSyCUt2G6KFrKTpKlUkbUrTIH0SqpgzRX8_0\"\n                  >\n                    {\n                      center ?\n                        <GoogleMap\n                          mapContainerStyle={{ height: '100%', width: '100%' }}\n                          zoom={post.address === \"\" ? 14 : 17}\n                          onUnmount={onUnmount}\n                          center={center}\n                        >\n                          <Circle\n                            onLoad={onLoadRec}\n                            center={center}\n                            radius={post.address === \"\" ? 400 : 100}\n                            options={\n                              {\n                                strokeColor: '#005edc',\n                                strokeOpacity: 0.8,\n                                strokeWeight: 2,\n                                fillColor: '#005edc',\n                                fillOpacity: 0.35,\n                                clickable: false,\n                                draggable: false,\n                                editable: false,\n                                visible: true,\n                                zIndex: 1\n                              }\n                            }\n                          />\n                        </GoogleMap>\n                        : \"\"\n                    }\n                  </LoadScript>\n                </div>\n\n                <div className='data'>\n                  <div>\n                    <span>Post date: </span>  {convertDate(post.date)}\n                  </div>\n                  <div className=\"divider\"></div>\n                  <div>\n                    <span>Bedrooms: </span>  {post.bedrooms} BR\n                  </div>\n                  <div className=\"divider\"></div>\n                  <div>\n                    <span>Area: </span>  {post.area} ft²\n                  </div>\n                  <div className=\"divider\"></div>\n                  <div>\n                    <span>Neighborhood: </span>  {post.neighborhood.join(\" \")}\n                  </div>\n                  <div className=\"divider\"></div>\n                  <div>\n                    <span>Address: </span>  {post.address === \"\" ? 'N/A' : post.address}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </React.Fragment>\n\n        ) : (\n            <Loader\n              type=\"Puff\"\n              color=\"#4f5d75;\"\n              height={100}\n              width={100}\n              className=\"loader\"\n            />\n          )\n      }\n    </div >\n  );\n};\n\nexport default withRouter(PostPage);\n","/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/api/location.js",[],"/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/views/authenticate/index.js",[],"/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/components/sign-in/index.js",["109"],"import React, { useState } from \"react\";\nimport { signInUser } from \"../../api/user\";\nimport sha256 from \"crypto-js/sha256\";\n\nconst Login = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(undefined);\n\n  // const handlePassword = (pass) => setPassword(sha256(pass).toString());\n  const handlePassword = (pass) => setPassword(pass);\n\n  const handleClick = () => {\n    if (username === \"\" || password === \"\") {\n      setError(\"Please fill in all fields\");\n      return;\n    }\n    var payload = {\n      email: username,\n      password: password,\n    };\n\n    signInUser(payload)\n      .then((response) => {\n        console.log(response);\n        if (response.status === 200) {\n          props.success(response.data);\n        } else if (response.status === 202) {\n          setError(response.data);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  return (\n    <div className=\"container\">\n      <div onClick={props.changeMode} className=\"top-right-corner\">\n        Sign-up\n      </div>\n      <h1>Sign-in</h1>\n\n      <div>\n        <label htmlFor=\"email\">Email: </label>\n        <input\n          id=\"email\"\n          alt=\"email\"\n          autoFocus\n          name=\"username\"\n          placeholder=\"Enter your Email\"\n          type=\"text\"\n          onChange={(event) => setUsername(event.target.value)}\n        ></input>\n      </div>\n\n      <div>\n        <label htmlFor=\"password\">Password: </label>\n        <input\n          id=\"password\"\n          alt=\"password\"\n          name=\"password\"\n          placeholder=\"Enter your Password\"\n          type=\"password\"\n          onChange={(event) => handlePassword(event.target.value)}\n        ></input>\n      </div>\n\n      <button aria-label=\"Sign into forum\" onClick={handleClick}>\n        Sign-in\n      </button>\n\n      <div className=\"error\">{error ? error : \"\"}</div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/components/sign-up/index.js",[],"/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/api/user.js",[],"/Users/emileferrand/Documents/School-NEU/5610/craigslist-explorer/src/wrapper.js",["110"],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":77,"column":26,"nodeType":"117","endLine":77,"endColumn":28,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":18,"column":33,"nodeType":"121","messageId":"122","endLine":18,"endColumn":39},{"ruleId":"119","severity":1,"message":"123","line":18,"column":41,"nodeType":"121","messageId":"122","endLine":18,"endColumn":50},{"ruleId":"119","severity":1,"message":"124","line":28,"column":10,"nodeType":"121","messageId":"122","endLine":28,"endColumn":15},{"ruleId":"119","severity":1,"message":"125","line":28,"column":17,"nodeType":"121","messageId":"122","endLine":28,"endColumn":25},{"ruleId":"119","severity":1,"message":"126","line":29,"column":10,"nodeType":"121","messageId":"122","endLine":29,"endColumn":22},{"ruleId":"119","severity":1,"message":"127","line":29,"column":24,"nodeType":"121","messageId":"122","endLine":29,"endColumn":39},{"ruleId":"119","severity":1,"message":"128","line":30,"column":10,"nodeType":"121","messageId":"122","endLine":30,"endColumn":13},{"ruleId":"119","severity":1,"message":"129","line":32,"column":10,"nodeType":"121","messageId":"122","endLine":32,"endColumn":21},{"ruleId":"119","severity":1,"message":"130","line":3,"column":8,"nodeType":"121","messageId":"122","endLine":3,"endColumn":14},{"ruleId":"119","severity":1,"message":"131","line":5,"column":25,"nodeType":"121","messageId":"122","endLine":5,"endColumn":29},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'requestPosts'. Either include it or remove the dependency array.","ArrayExpression",["134"],"no-unused-vars","'Marker' is defined but never used.","Identifier","unusedVar","'Rectangle' is defined but never used.","'posts' is assigned a value but never used.","'setPosts' is assigned a value but never used.","'visiblePosts' is assigned a value but never used.","'setVisiblePosts' is assigned a value but never used.","'map' is assigned a value but never used.","'coordinates' is assigned a value but never used.","'sha256' is defined but never used.","'test' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},"Update the dependencies array to be: [requestPosts]",{"range":"137","text":"138"},[2198,2200],"[requestPosts]"]